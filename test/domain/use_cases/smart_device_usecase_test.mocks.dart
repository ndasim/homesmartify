// Mocks generated by Mockito 5.4.2 from annotations
// in homesmartify/test/domain/use_cases/smart_device_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:homesmartify/core/error/failure.dart' as _i5;
import 'package:homesmartify/domain/repositories/smart_device_repository.dart'
    as _i3;
import 'package:homesmartify/domain/entities/smart_device.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SmartDeviceRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSmartDeviceRepository extends _i1.Mock
    implements _i3.SmartDeviceRepository {
  MockSmartDeviceRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.SmartDevice<dynamic>>> getSmartDevice(
          String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSmartDevice,
          [id],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.SmartDevice<dynamic>>>.value(
                _FakeEither_0<_i5.Failure, _i6.SmartDevice<dynamic>>(
          this,
          Invocation.method(
            #getSmartDevice,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.SmartDevice<dynamic>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.SmartDevice<dynamic>>>>
      getSmartDevices() => (super.noSuchMethod(
            Invocation.method(
              #getSmartDevices,
              [],
            ),
            returnValue: _i4.Future<
                    _i2
                    .Either<_i5.Failure, List<_i6.SmartDevice<dynamic>>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.SmartDevice<dynamic>>>(
              this,
              Invocation.method(
                #getSmartDevices,
                [],
              ),
            )),
          ) as _i4
              .Future<_i2.Either<_i5.Failure, List<_i6.SmartDevice<dynamic>>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.SmartDevice<dynamic>>> addSmartDevice(
          _i6.SmartDevice<dynamic>? smartDevice) =>
      (super.noSuchMethod(
        Invocation.method(
          #addSmartDevice,
          [smartDevice],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.SmartDevice<dynamic>>>.value(
                _FakeEither_0<_i5.Failure, _i6.SmartDevice<dynamic>>(
          this,
          Invocation.method(
            #addSmartDevice,
            [smartDevice],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.SmartDevice<dynamic>>>);
  @override
  _i4.Future<
      _i2.Either<_i5.Failure, _i6.SmartDevice<dynamic>>> updateSmartDevice(
          _i6.SmartDevice<dynamic>? smartDevice) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateSmartDevice,
          [smartDevice],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.SmartDevice<dynamic>>>.value(
                _FakeEither_0<_i5.Failure, _i6.SmartDevice<dynamic>>(
          this,
          Invocation.method(
            #updateSmartDevice,
            [smartDevice],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.SmartDevice<dynamic>>>);
  @override
  _i4.Future<
      _i2.Either<_i5.Failure, _i6.SmartDevice<dynamic>>> deleteSmartDevice(
          _i6.SmartDevice<dynamic>? smartDevice) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteSmartDevice,
          [smartDevice],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.SmartDevice<dynamic>>>.value(
                _FakeEither_0<_i5.Failure, _i6.SmartDevice<dynamic>>(
          this,
          Invocation.method(
            #deleteSmartDevice,
            [smartDevice],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.SmartDevice<dynamic>>>);
}
