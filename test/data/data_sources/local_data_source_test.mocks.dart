// Mocks generated by Mockito 5.4.2 from annotations
// in homesmartify/test/data/data_sources/local_data_source_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:fpdart/fpdart.dart' as _i5;
import 'package:homesmartify/core/error/failure.dart' as _i6;
import 'package:homesmartify/data/data_sources/smart_device_local_data_source.dart' as _i4;
import 'package:homesmartify/domain/entities/smart_device.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i8;
import 'package:secure_shared_preferences/secure_shared_pref.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSecureSharedPref_0 extends _i1.SmartFake
    implements _i2.SecureSharedPref {
  _FakeSecureSharedPref_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SecureSharedPref].
///
/// See the documentation for Mockito's code generation for more information.
class MockSecureSharedPref extends _i1.Mock implements _i2.SecureSharedPref {
  MockSecureSharedPref() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get keyCode => (super.noSuchMethod(
        Invocation.getter(#keyCode),
        returnValue: '',
      ) as String);
  @override
  String get valueCode => (super.noSuchMethod(
        Invocation.getter(#valueCode),
        returnValue: '',
      ) as String);
  @override
  _i3.Future<String?> getString(
    String? key, {
    bool? isEncrypted = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getString,
          [key],
          {#isEncrypted: isEncrypted},
        ),
        returnValue: _i3.Future<String?>.value(),
      ) as _i3.Future<String?>);
  @override
  _i3.Future<int?> getInt(
    String? key, {
    bool? isEncrypted = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getInt,
          [key],
          {#isEncrypted: isEncrypted},
        ),
        returnValue: _i3.Future<int?>.value(),
      ) as _i3.Future<int?>);
  @override
  _i3.Future<bool?> getBool(
    String? key, {
    bool? isEncrypted = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBool,
          [key],
          {#isEncrypted: isEncrypted},
        ),
        returnValue: _i3.Future<bool?>.value(),
      ) as _i3.Future<bool?>);
  @override
  _i3.Future<double?> getDouble(
    String? key, {
    bool? isEncrypted = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDouble,
          [key],
          {#isEncrypted: isEncrypted},
        ),
        returnValue: _i3.Future<double?>.value(),
      ) as _i3.Future<double?>);
  @override
  _i3.Future<Map<dynamic, dynamic>?> getMap(
    String? key, {
    bool? isEncrypted = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMap,
          [key],
          {#isEncrypted: isEncrypted},
        ),
        returnValue: _i3.Future<Map<dynamic, dynamic>?>.value(),
      ) as _i3.Future<Map<dynamic, dynamic>?>);
  @override
  _i3.Future<List<String>> getStringList(
    String? key, {
    bool? isEncrypted = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getStringList,
          [key],
          {#isEncrypted: isEncrypted},
        ),
        returnValue: _i3.Future<List<String>>.value(<String>[]),
      ) as _i3.Future<List<String>>);
  @override
  _i3.Future<void> putString(
    String? key,
    String? val, {
    bool? isEncrypted = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putString,
          [
            key,
            val,
          ],
          {#isEncrypted: isEncrypted},
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<void> putInt(
    String? key,
    int? val, {
    bool? isEncrypted = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putInt,
          [
            key,
            val,
          ],
          {#isEncrypted: isEncrypted},
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<void> putBool(
    String? key,
    bool? val, {
    bool? isEncrypted = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putBool,
          [
            key,
            val,
          ],
          {#isEncrypted: isEncrypted},
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<void> putMap(
    String? key,
    Map<dynamic, dynamic>? val, {
    bool? isEncrypted = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putMap,
          [
            key,
            val,
          ],
          {#isEncrypted: isEncrypted},
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<void> putDouble(
    String? key,
    double? val, {
    bool? isEncrypted = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putDouble,
          [
            key,
            val,
          ],
          {#isEncrypted: isEncrypted},
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<void> putStringList(
    String? key,
    List<String>? val, {
    bool? isEncrypted = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putStringList,
          [
            key,
            val,
          ],
          {#isEncrypted: isEncrypted},
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<void> clearAll() => (super.noSuchMethod(
        Invocation.method(
          #clearAll,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}

/// A class which mocks [LocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalDataSource extends _i1.Mock implements _i4.SmartDeviceLocalDataSource {
  MockLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.SecureSharedPref get secureSharedPref => (super.noSuchMethod(
        Invocation.getter(#secureSharedPref),
        returnValue: _FakeSecureSharedPref_0(
          this,
          Invocation.getter(#secureSharedPref),
        ),
      ) as _i2.SecureSharedPref);
  @override
  _i3.Future<_i5.Either<_i6.Failure, List<_i7.SmartDevice<dynamic>>>>
      getSmartDevices() => (super.noSuchMethod(
            Invocation.method(
              #getSmartDevices,
              [],
            ),
            returnValue: _i3.Future<
                    _i5
                    .Either<_i6.Failure, List<_i7.SmartDevice<dynamic>>>>.value(
                _i8.dummyValue<
                    _i5.Either<_i6.Failure, List<_i7.SmartDevice<dynamic>>>>(
              this,
              Invocation.method(
                #getSmartDevices,
                [],
              ),
            )),
          ) as _i3
              .Future<_i5.Either<_i6.Failure, List<_i7.SmartDevice<dynamic>>>>);
  @override
  _i3.Future<_i5.Either<_i6.Failure, _i7.SmartDevice<dynamic>>> addSmartDevice(
          _i7.SmartDevice<dynamic>? smartDevice) =>
      (super.noSuchMethod(
        Invocation.method(
          #addSmartDevice,
          [smartDevice],
        ),
        returnValue: _i3
            .Future<_i5.Either<_i6.Failure, _i7.SmartDevice<dynamic>>>.value(
            _i8.dummyValue<_i5.Either<_i6.Failure, _i7.SmartDevice<dynamic>>>(
          this,
          Invocation.method(
            #addSmartDevice,
            [smartDevice],
          ),
        )),
      ) as _i3.Future<_i5.Either<_i6.Failure, _i7.SmartDevice<dynamic>>>);
  @override
  _i3.Future<
      _i5.Either<_i6.Failure, _i7.SmartDevice<dynamic>>> deleteSmartDevice(
          _i7.SmartDevice<dynamic>? smartDevice) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteSmartDevice,
          [smartDevice],
        ),
        returnValue: _i3
            .Future<_i5.Either<_i6.Failure, _i7.SmartDevice<dynamic>>>.value(
            _i8.dummyValue<_i5.Either<_i6.Failure, _i7.SmartDevice<dynamic>>>(
          this,
          Invocation.method(
            #deleteSmartDevice,
            [smartDevice],
          ),
        )),
      ) as _i3.Future<_i5.Either<_i6.Failure, _i7.SmartDevice<dynamic>>>);
  @override
  _i3.Future<_i5.Either<_i6.Failure, _i7.SmartDevice<dynamic>>> getSmartDevice(
          String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSmartDevice,
          [id],
        ),
        returnValue: _i3
            .Future<_i5.Either<_i6.Failure, _i7.SmartDevice<dynamic>>>.value(
            _i8.dummyValue<_i5.Either<_i6.Failure, _i7.SmartDevice<dynamic>>>(
          this,
          Invocation.method(
            #getSmartDevice,
            [id],
          ),
        )),
      ) as _i3.Future<_i5.Either<_i6.Failure, _i7.SmartDevice<dynamic>>>);
  @override
  _i3.Future<
      _i5.Either<_i6.Failure, _i7.SmartDevice<dynamic>>> updateSmartDevice(
          _i7.SmartDevice<dynamic>? smartDevice) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateSmartDevice,
          [smartDevice],
        ),
        returnValue: _i3
            .Future<_i5.Either<_i6.Failure, _i7.SmartDevice<dynamic>>>.value(
            _i8.dummyValue<_i5.Either<_i6.Failure, _i7.SmartDevice<dynamic>>>(
          this,
          Invocation.method(
            #updateSmartDevice,
            [smartDevice],
          ),
        )),
      ) as _i3.Future<_i5.Either<_i6.Failure, _i7.SmartDevice<dynamic>>>);
}
